local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

-- Function to set ResetOnSpawn to false for a given ScreenGui
local function setResetOnSpawnFalse(screenGui)
    if screenGui then
        screenGui.ResetOnSpawn = false
    end
end

-- Function to traverse through all ScreenGui instances and set ResetOnSpawn to false
local function setAllResetOnSpawnFalse()
    local playerGui = Players.LocalPlayer:WaitForChild("PlayerGui")
    for _, screenGui in pairs(playerGui:GetChildren()) do
        setResetOnSpawnFalse(screenGui)
    end
end

-- Call the function to set ResetOnSpawn to false for all ScreenGui instances
setAllResetOnSpawnFalse()

-- Function to fetch the player's headshot image
local function getPlayerHeadshotImage(playerName)
    local player = Players:FindFirstChild(playerName)
    if player then
        local userId = player.UserId
        local ThumbType = Enum.ThumbnailType.HeadShot
        local ThumbSize = Enum.ThumbnailSize.Size420x420

        return Players:GetUserThumbnailAsync(userId, ThumbType, ThumbSize)
    end
    return nil
end

-- ESP Script
local espEnabled = false

local function esp(p, cr)
    local hrp = cr:WaitForChild("HumanoidRootPart")

    local text = Drawing.new("Text")
    text.Visible = false
    text.Center = true
    text.Outline = true
    text.Font = Enum.Font.SourceSansBold
    text.Size = 18
    text.Color = Color3.new(1, 1, 1)

    local connection

    local function dc()
        text.Visible = false
        text:Remove()
        if connection then
            connection:Disconnect()
            connection = nil
        end
    end

    connection = RunService.RenderStepped:Connect(function()
        if espEnabled then
            local hrp_pos, hrp_onscreen = Workspace.CurrentCamera:WorldToViewportPoint(hrp.Position)
            if hrp_onscreen then
                text.Position = Vector2.new(hrp_pos.X, hrp_pos.Y - 50)
                text.Text = p.Name
                text.Visible = true
            else
                dc()
            end
        else
            dc()
        end
    end)
end

local function onPlayerAdded(p)
    p.CharacterAdded:Connect(function(character)
        esp(p, character)
    end)
end

Players.PlayerAdded:Connect(onPlayerAdded)
for _, p in ipairs(Players:GetPlayers()) do
    onPlayerAdded(p)
end

-- Create a ScreenGui for the button
local gui = Instance.new("ScreenGui")
gui.Name = "CustomButtonsGui"
gui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the button for teleportation confirmation
local rejoinButton = Instance.new("TextButton")
rejoinButton.Name = "RejoinButton"
rejoinButton.Parent = gui
rejoinButton.AnchorPoint = Vector2.new(1, 0)
rejoinButton.Position = UDim2.new(1, -1060, 0, -30)  -- Adjust X position as needed
rejoinButton.Size = UDim2.new(0, 30, 0, 30)
rejoinButton.Font = Enum.Font.SourceSansBold
rejoinButton.TextSize = 18
rejoinButton.TextColor3 = Color3.fromRGB(255, 255, 255)
rejoinButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
rejoinButton.BackgroundTransparency = 0.5  -- Semi-transparent background
rejoinButton.TextStrokeTransparency = 1
rejoinButton.Text = "ü§ç"

-- Add UICorner to make the button corners smooth
local rejoinButtonCorner = Instance.new("UICorner")
rejoinButtonCorner.CornerRadius = UDim.new(0, 5)  -- Adjust the corner radius as needed
rejoinButtonCorner.Parent = rejoinButton

-- Function to teleport when the "Rejoin" button is clicked
rejoinButton.MouseButton1Click:Connect(function()
    local bindable = Instance.new("BindableFunction")

    function bindable.OnInvoke(response)
        local ts = game:GetService("TeleportService")
        local p = game:GetService("Players").LocalPlayer

        ts:Teleport(game.PlaceId, p)
        if response == "Yes" then
            -- Your logic when "Yes" is chosen
        elseif response == "No" then
            -- Your logic when "No" is chosen
        end
    end

    -- Fetch the current player's headshot image
    local playerName = Players.LocalPlayer.Name
    local HeadshotImage = getPlayerHeadshotImage(playerName)

    StarterGui:SetCore("SendNotification", {
        Title = "  üíû REJOIN",
        Text = "   Are You Sure?",
        Duration = 8,
        Callback = bindable,
        Button1 = "Yes",
        Icon = HeadshotImage or ""  -- Set the headshot image as the icon, fallback to empty string if image not found
    })
end)

-- Create a ScreenGui for the ESP toggle button
local espButtonGui = Instance.new("ScreenGui")
espButtonGui.Name = "ESPButtonGui"
espButtonGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the ESP toggle button
local espToggleButton = Instance.new("TextButton")
espToggleButton.Name = "ESPButton"
espToggleButton.Parent = espButtonGui
espToggleButton.AnchorPoint = Vector2.new(1, 0)
espToggleButton.Position = UDim2.new(1, -1020, 0, -30)  -- Adjust X position as needed
espToggleButton.Size = UDim2.new(0, 30, 0, 30)
espToggleButton.Font = Enum.Font.SourceSansBold
espToggleButton.TextSize = 18
espToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
espToggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
espToggleButton.BackgroundTransparency = 0.5  -- Semi-transparent background
espToggleButton.TextStrokeTransparency = 1
espToggleButton.Text = "üê£"

-- Add UICorner to make the button corners smooth
local espButtonCorner = Instance.new("UICorner")
espButtonCorner.CornerRadius = UDim.new(0, 5)  -- Adjust the corner radius as needed
espButtonCorner.Parent = espToggleButton

-- Function to handle ESP toggle when the button is clicked
espToggleButton.MouseButton1Click:Connect(function()
    local bindable = Instance.new("BindableFunction")

    function bindable.OnInvoke(response)
        if response == "Yes" then
            espEnabled = not espEnabled
            if espEnabled then
                StarterGui:SetCore("SendNotification", {
                    Title = " ‚ö†Ô∏è ESP Enabled ‚ö†Ô∏è",
                    Text = "ESP is now enabled!",
                    Duration = 5,
                })
            else
                StarterGui:SetCore("SendNotification", {
                    Title = " ‚ö†Ô∏è ESP Disabled ‚ö†Ô∏è",
                    Text = "ESP is now disabled!",
                    Duration = 5,
                })
            end
        end
    end

    -- Fetch the current player's headshot image
    local playerName = Players.LocalPlayer.Name
    local HeadshotImage = getPlayerHeadshotImage(playerName)

    StarterGui:SetCore("SendNotification", {
        Title = " ‚ö†Ô∏è ESP ‚ö†Ô∏è",
        Text = "Do you want to toggle ESP?",
        Duration = 8,
        Callback = bindable,
        Button1 = "Yes",
        Icon = HeadshotImage or ""  -- Set the headshot image as the icon, fallback to empty string if image not found
    })
end)
