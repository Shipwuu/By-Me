-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

-- Variables
local player = Players.LocalPlayer
local client = player
local screenGui = Instance.new("ScreenGui")
local frame = Instance.new("Frame")
local label = Instance.new("TextLabel")

-- Create the GUI elements
screenGui.Name = "HuntDisplayGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

frame.Size = UDim2.new(0, 120, 0, 40)  -- Smaller and slightly longer frame
frame.Position = UDim2.new(1, -130, 0.5, -20)  -- Position between the checklistFrame and right side
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.BackgroundTransparency = 0.7  -- More transparency
frame.BorderSizePixel = 2
frame.Visible = false
frame.Parent = screenGui

label.Size = UDim2.new(1, 0, 1, 0)
label.BackgroundTransparency = 1
label.Font = Enum.Font.SourceSans
label.TextSize = 18
label.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White color for text
label.Text = "Hunt"
label.TextStrokeTransparency = 0.5
label.TextXAlignment = Enum.TextXAlignment.Center
label.TextYAlignment = Enum.TextYAlignment.Center
label.Parent = frame

-- Function to start monitoring ghost hunting
local function monitorGhostHunting()
    local function updateHuntDisplay(isHunting)
        if isHunting then
            frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red color
        else
            frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Black color
        end
        frame.Visible = isHunting
    end

    RunService.RenderStepped:Connect(function()
        local GhostModel = Workspace:FindFirstChild('GhostModel')
        local Base = GhostModel and GhostModel:FindFirstChild('Base')
        local isHunting = Base and Base.Transparency == 0

        updateHuntDisplay(isHunting)
    end)
end

-- Call the function to start monitoring ghost hunting
monitorGhostHunting()
