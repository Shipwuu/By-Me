-- LocalScript in StarterPlayerScripts or StarterGui

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local velocityHandlerName = "VelocityHandler"
local gyroHandlerName = "GyroHandler"

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

local isFlying = false
local flySpeed = 50
local velocityHandler, gyroHandler

local function startFlying()
    if isFlying then return end
    isFlying = true

    -- Create BodyVelocity and BodyGyro
    velocityHandler = Instance.new("BodyVelocity")
    velocityHandler.Name = velocityHandlerName
    velocityHandler.Parent = root
    velocityHandler.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    velocityHandler.Velocity = Vector3.new(0, 0, 0)

    gyroHandler = Instance.new("BodyGyro")
    gyroHandler.Name = gyroHandlerName
    gyroHandler.Parent = root
    gyroHandler.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    gyroHandler.P = 1000
    gyroHandler.D = 50

    RunService.RenderStepped:Connect(function()
        if not isFlying then return end

        -- Update BodyGyro to follow camera
        gyroHandler.CFrame = workspace.CurrentCamera.CFrame

        -- Get input and apply velocity
        local moveVector = Vector3.zero
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveVector = moveVector + workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveVector = moveVector - workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveVector = moveVector - workspace.CurrentCamera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveVector = moveVector + workspace.CurrentCamera.CFrame.RightVector
        end

        velocityHandler.Velocity = moveVector.Unit * flySpeed
    end)
end

local function stopFlying()
    if not isFlying then return end
    isFlying = false

    if velocityHandler then
        velocityHandler:Destroy()
        velocityHandler = nil
    end
    if gyroHandler then
        gyroHandler:Destroy()
        gyroHandler = nil
    end
end

-- Toggle flying on key press (for testing)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.F then
        if isFlying then
            stopFlying()
        else
            startFlying()
        end
    end
end)

-- Toggle flying with the button
local function createToggleButton()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "FlyToggleGui"
    screenGui.Parent = player:WaitForChild("PlayerGui")

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 100, 0, 50)
    toggleButton.Position = UDim2.new(0.5, -50, 0.5, -25) -- Center of the screen
    toggleButton.Text = "Fly"
    toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.Parent = screenGui

    toggleButton.MouseButton1Click:Connect(function()
        if isFlying then
            stopFlying()
            toggleButton.Text = "Fly"
        else
            startFlying()
            toggleButton.Text = "Unfly"
        end
    end)
end

createToggleButton()
