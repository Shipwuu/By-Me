local Players = game:GetService('Players')
local client = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Items = workspace:FindFirstChild('Items')
local GhostName = workspace:FindFirstChild('Van') and workspace.Van.Objectives.SurfaceGui.Frame.Objectives.GhostInfo.Text:split('is ')[2]:match('>(.+)<')
local Rooms = workspace:FindFirstChild('House') and workspace.House:FindFirstChild('Rooms')

-- Remove GUI if it already exists
if client:FindFirstChild('PlayerGui'):FindFirstChild('InfoGui') then
    client:FindFirstChild('PlayerGui'):FindFirstChild('InfoGui'):Destroy()
end

local ScreenGui = Instance.new('ScreenGui')
local Frame = Instance.new('Frame')
local UIListLayout = Instance.new('UIListLayout')

ScreenGui.Name = "InfoGui"
ScreenGui.Parent = client:WaitForChild('PlayerGui')

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BackgroundTransparency = 0.5
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0, 10, 0, 10)
Frame.Size = UDim2.new(0, 200, 0, 300)
Frame.ClipsDescendants = true
Frame.Active = true
Frame.Draggable = true

UIListLayout.Parent = Frame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)

local function createLabel(text)
    local label = Instance.new('TextLabel')
    label.Text = text
    label.Font = Enum.Font.Arial
    label.TextSize = 12
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Parent = Frame
    return label
end

local playerNameLabel = createLabel('Name: ' .. client.Name)
local sanityLabel = createLabel('Sanity: %s')
local roomLabel = createLabel('Room: %s')
local peaceLabel = createLabel('Peace: %s')
local ghostNameLabel = createLabel('\nName: ' .. (GhostName or "Unknown"))
local huntingLabel = createLabel('Hunting: %s')
local ghostRoomLabel = createLabel('Room: %s')
local favoriteRoomLabel = createLabel('Favorite Room: %s')

local function updateLabels()
    sanityLabel.Text = 'Sanity: ' .. (client:FindFirstChild('Sanity') and client.Sanity.Value or "Unknown") .. '%'
    roomLabel.Text = 'Room: ' .. (client.Character and client.Character.Parent and client.Character.Parent.Name or "Unknown")
    peaceLabel.Text = 'Peace: %s'
    huntingLabel.Text = 'Hunting: %s'
    ghostRoomLabel.Text = 'Room: %s'
    favoriteRoomLabel.Text = 'Favorite Room: %s'
end

game:GetService('RunService').RenderStepped:Connect(updateLabels)

-- Making the button draggable on mobile or android
local UserInputService = game:GetService("UserInputService")

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
