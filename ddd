-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

-- Variables
local player = Players.LocalPlayer
local client = player
local screenGui = Instance.new("ScreenGui")
local checklistFrame = Instance.new("Frame")
local detectedParts = {}

-- Function to create or update the checklist frame
local function updateChecklistFrame()
    -- Clear existing children
    for _, child in pairs(checklistFrame:GetChildren()) do
        if child:IsA('TextLabel') then
            child:Destroy()
        end
    end

    -- Add detected parts to the frame
    for partName, isDetected in pairs(detectedParts) do
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 0, 25)
        label.BackgroundTransparency = 1
        label.Font = Enum.Font.SourceSans
        label.TextSize = 14
        label.TextColor3 = isDetected and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 255, 255)
        label.Text = partName .. (isDetected and " âœ”" or "")
        label.Parent = checklistFrame
    end
end

-- Function to mark a part as detected
local function markPartAsDetected(partName)
    detectedParts[partName] = true
    updateChecklistFrame()
end

-- Initializing GUI elements
screenGui.Name = "GhostRoomChecklistGui"
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false  -- Ensure GUI persists across respawns

checklistFrame.Size = UDim2.new(0, 150, 0, 200)  -- Adjust size as needed
checklistFrame.Position = UDim2.new(1, -160, 0, 10)  -- Top right position with some offset
checklistFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
checklistFrame.BackgroundTransparency = 0.5
checklistFrame.BorderSizePixel = 2
checklistFrame.Parent = screenGui

-- Initialize detected parts list
detectedParts = {
    ["Orb"] = false,
    ["EMF Reader"] = false,
    ["Book"] = false,
    ["Spirit Box"] = false,
    ["Thermometer"] = false
}

-- Function to find evidence parts
local function findEvidenceParts()
    local Items = Workspace:FindFirstChild("Items")

    local function findEMF()
        local EMF = Items and Items:FindFirstChild("EMF Reader")
        return EMF
    end

    local function findBook()
        local Book = Items and Items:FindFirstChild("Book")
        return Book
    end

    local function findSpiritBox()
        local SB = Items and Items:FindFirstChild("Spirit Box")
        return SB
    end

    local function findThermometer()
        local TM = Items and Items:FindFirstChild("Thermometer")
        return TM
    end

    -- Check for evidence parts
    while true do
        local EMF = findEMF()
        local Book = findBook()
        local SB = findSpiritBox()
        local TM = findThermometer()

        if EMF then
            markPartAsDetected("EMF Reader")
        end
        if Book then
            markPartAsDetected("Book")
        end
        if SB then
            markPartAsDetected("Spirit Box")
        end
        if TM then
            markPartAsDetected("Thermometer")
        end

        wait(0.5)
    end
end

-- Call function to find evidence parts
coroutine.wrap(findEvidenceParts)()

-- Add initial detected parts
for _, partName in ipairs({"Orb", "emfpart5"}) do
    local detectedPart = Workspace:FindFirstChild(partName)
    if detectedPart then
        markPartAsDetected(partName)
    end
end

-- Detecting new parts added to the workspace
Workspace.ChildAdded:Connect(function(child)
    if detectedParts[child.Name] ~= nil then
        markPartAsDetected(child.Name)
    end
end)

-- Initial update of the checklist frame
updateChecklistFrame()
