
--< GUI Settings >--
local setting = {
    theme = {
        images = {
            open_ui_icon = "rbxassetid://4521836217",
            close_ui_icon = "rbxassetid://4510354080",
        };
        
        colors = {
            ["primary color"] = Color3.fromRGB(192, 57, 43),
            ["secondary color"] = Color3.fromRGB(37, 41, 43),
            ["drag click"] = Color3.fromRGB(106, 30, 23),
            ["on color"] = Color3.fromRGB(48, 255, 162),
            ["exit click"] = Color3.fromRGB(255, 50, 50),
            ["text color"] = Color3.fromRGB(255, 255, 255)
        },
        
        font = "SourceSans",
        hotkey = Enum.KeyCode.Insert
    };
}

--< Library >--
local engine = loadstring(game:HttpGet("https://navicat.glitch.me/ui3.lua"))() --// Original https://pastebin.com/raw/y0iyJTiN

--< Initialized UI >--
local engine = engine(setting)
local Library = engine:init()
-- Documentation: https://pastebin.com/raw/H3ARQ6ZE

--< Window >--
local Windows = {'Main', 'Client', 'ESP', 'Credits', 'Information', 'Teleports'}
local TempWindows = {}
local XPosition,YPosition = 0
local XSize,YSize = 200, 150
for Index,Value in pairs(Windows) do
    if type(Value) ~= 'string' then Value = tostring(Value) end
    if XPosition >= 800 then
        XPosition = 0
        YPosition = YSize + 24
    end
    TempWindows[Value] = Library:create('window', '<semibold>' .. Value, {
        resizeable = false,
        default_position = UDim2.new(0, XPosition, 0, YPosition),
        default_size = UDim2.new(0, XSize, 0, YSize)
    })
    Windows[Index] = nil
    XPosition = XPosition + (XSize + 4)
end
Windows = TempWindows

function Windows:addColumn(window, size)
    size = size or 140
    return self[window]:create('column', size)
end

--< Column >--
local Columns = {}
for Index,Value in pairs(Windows) do
    Columns[Index] = {}
end
table.insert(Columns['Main'], Windows:addColumn('Main', 170))
table.insert(Columns['Client'], Windows:addColumn('Client'))
table.insert(Columns['ESP'], Windows:addColumn('ESP'))
table.insert(Columns['Credits'], Windows:addColumn('Credits'))
table.insert(Columns['Information'], Windows:addColumn('Information', 180))
table.insert(Columns['Teleports'], Windows:addColumn('Teleports'))

--< Global Variable >--
Players = game:GetService('Players')
client = Players.LocalPlayer
Camera = workspace.CurrentCamera

Items = workspace:FindFirstChild('Items')
GhostName = workspace:FindFirstChild('Van').Objectives.SurfaceGui.Frame.Objectives.GhostInfo.Text:split('is ')[2]:match('>(.+)<')
Rooms = workspace:FindFirstChild('House') and workspace.House:FindFirstChild('Rooms')

Main = {    
    FindEvidence = false,
    AutoEvidence = false,
    AutoAggro = false,
}
Client = {
    Noclip = false,
    Speedhack = false,
    Nofog = false,
    Fullbright = false
}
ESP = {
    Enabled = false,
    Ghost = false,
    Player = false,
    Items = false,
    
    Color = Color3.fromRGB(192, 57, 43),
    Type = '1',
    Objects = {}   
}

Evidence = {}
GhostRoom = {}
IsReady = false
Step = '0'

function log(...) return print('[WRAPPER]:', ...) end
local Init = loadstring(game:HttpGet('https://navicat.glitch.me/Specter/Init.lua'))()
coroutine.wrap(Init)()

spawn(function()
    while IsReady == 'Fail' do wait()
        Columns['Main'][1]:create('button', 'Init Ghost Room', function()
            Step = '1'
            coroutine.wrap(Init)()
        end)
        return
    end
end)

-- Information
local FSize = 12
do
    Columns['Information'][1]:create('label', {Text = ('Name: %s'):format(client.Name), FontSize = FSize, Font = 'Arial', Color3.fromRGB(255,255,255)})
    ISanity = Columns['Information'][1]:create('label', {Text = 'Sanity: %s%', FontSize = FSize, Font = 'Arial', Color3.fromRGB(255,255,255)})
    ICRoom = Columns['Information'][1]:create('label', {Text = 'Room: %s', FontSize = FSize, Font = 'Arial', Color3.fromRGB(255,255,255)})
    IPeace = Columns['Information'][1]:create('label', {Text = ('Peace: %s'), FontSize = FSize, Font = 'Arial', Color3.fromRGB(255,255,255)})
    Columns['Information'][1]:create('label', {Text = ('\nName: %s'):format(GhostName), FontSize = FSize, Font = 'Arial', Color3.fromRGB(255,255,255)})
    IGHunting = Columns['Information'][1]:create('label', {Text = ('Hunting: %s'), FontSize = FSize, Font = 'Arial', Color3.fromRGB(255,255,255)})
    IGRoom = Columns['Information'][1]:create('label', {Text = ('Room: %s'), FontSize = FSize, Font = 'Arial', Color3.fromRGB(255,255,255)})
    IGFRoom = Columns['Information'][1]:create('label', {Text = ('Favorite Room: %s'), FontSize = FSize, Font = 'Arial', Color3.fromRGB(255,255,255)})
end
