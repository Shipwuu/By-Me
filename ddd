-- LocalScript in StarterGui

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local velocityHandlerName = "VelocityHandler"
local gyroHandlerName = "GyroHandler"

local IsOnMobile = UserInputService.TouchEnabled
local flySpeed = 50

local function getRoot(character)
    return character:FindFirstChild("HumanoidRootPart")
end

local function startFlying(character)
    local root = getRoot(character)
    if not root then return end
    
    -- Create BodyVelocity and BodyGyro
    local bv = Instance.new("BodyVelocity")
    bv.Name = velocityHandlerName
    bv.Parent = root
    bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bv.Velocity = Vector3.new(0, 0, 0)

    local bg = Instance.new("BodyGyro")
    bg.Name = gyroHandlerName
    bg.Parent = root
    bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    bg.P = 1000
    bg.D = 50

    RunService.RenderStepped:Connect(function()
        if not character or not root or not bv or not bg then return end

        -- Update BodyGyro to follow camera
        bg.CFrame = workspace.CurrentCamera.CFrame

        -- Get input and apply velocity
        local moveVector = Vector3.zero
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveVector = moveVector + workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveVector = moveVector - workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveVector = moveVector - workspace.CurrentCamera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveVector = moveVector + workspace.CurrentCamera.CFrame.RightVector
        end
        if IsOnMobile then
            -- Add mobile controls if needed
        end

        bv.Velocity = moveVector.Unit * flySpeed
    end)
end

local function stopFlying(character)
    local root = getRoot(character)
    if not root then return end
    
    local bv = root:FindFirstChild(velocityHandlerName)
    local bg = root:FindFirstChild(gyroHandlerName)
    if bv then bv:Destroy() end
    if bg then bg:Destroy() end
end

local function createToggleButton()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "FlyToggleGui"
    screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 100, 0, 50)
    toggleButton.Position = UDim2.new(0.5, -50, 0.9, -25)
    toggleButton.Text = "Fly"
    toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.Parent = screenGui

    return toggleButton
end

local function toggleFly()
    local player = Players.LocalPlayer
    if not player or not player.Character then return end
    
    local isFlying = false
    local toggleButton = createToggleButton()
    
    toggleButton.MouseButton1Click:Connect(function()
        if isFlying then
            stopFlying(player.Character)
            toggleButton.Text = "Fly"
        else
            startFlying(player.Character)
            toggleButton.Text = "Unfly"
        end
        isFlying = not isFlying
    end)
end

toggleFly()
