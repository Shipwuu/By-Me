local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local flying = false
local speed = 50
local bodyGyro, bodyVelocity

local moveDirection = Vector3.new()

-- Track joystick input
local function onInputChanged(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        local thumbstick = UserInputService:GetTouchPositions()
        if #thumbstick > 0 then
            local thumbstickPosition = thumbstick[1] -- Only the first touch for simplicity
            local screenSize = UserInputService:GetScreenSize()
            local normalizedPosition = Vector2.new(thumbstickPosition.X / screenSize.X, thumbstickPosition.Y / screenSize.Y)

            moveDirection = Vector3.new((normalizedPosition.X - 0.5) * 2, 0, (normalizedPosition.Y - 0.5) * 2)
        end
    end
end

local function startFlying()
    if flying then return end
    flying = true
    
    -- Create and configure BodyGyro and BodyVelocity
    bodyGyro = Instance.new("BodyGyro", rootPart)
    bodyGyro.P = 9e4
    bodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    bodyGyro.CFrame = rootPart.CFrame

    bodyVelocity = Instance.new("BodyVelocity", rootPart)
    bodyVelocity.velocity = Vector3.new(0, 0, 0)
    bodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)

    humanoid.PlatformStand = true

    -- Update loop for flying
    RunService.RenderStepped:Connect(function()
        if not flying then return end
        
        -- Update body velocity based on input
        if moveDirection.Magnitude > 0 then
            bodyVelocity.velocity = moveDirection.Unit * speed
        else
            bodyVelocity.velocity = Vector3.new(0, bodyVelocity.velocity.Y, 0) -- Prevent Y-axis movement
        end

        -- Keep the character aligned with the camera
        bodyGyro.CFrame = workspace.CurrentCamera.CFrame
    end)
end

local function stopFlying()
    if not flying then return end
    flying = false

    if bodyGyro then bodyGyro:Destroy() end
    if bodyVelocity then bodyVelocity:Destroy() end

    humanoid.PlatformStand = false
end

local function toggleFlying()
    if flying then
        stopFlying()
    else
        startFlying()
    end
end

-- Bind input changes to handle joystick movement
UserInputService.InputChanged:Connect(onInputChanged)

local function createToggleButton()
    local screenGui = Instance.new("ScreenGui", player.PlayerGui)
    local button = Instance.new("TextButton", screenGui)
    button.Size = UDim2.new(0, 200, 0, 50)
    button.Position = UDim2.new(0.5, -100, 0.9, -25)
    button.Text = "Toggle Fly"
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.BorderSizePixel = 0

    button.MouseButton1Click:Connect(toggleFlying)
end

createToggleButton()
